# 1. Реализовать функцию, принимающую два числа (позиционные аргументы) и выполняющую их деление.
# Числа запрашивать у пользователя, предусмотреть обработку ситуации деления на ноль.

def my_division():
    """Функция деления"""
    arg1 = int(input('Введите первое число: '))
    arg2 = int(input('Введите второе число: '))
    if arg2 != 0:
        return arg1 / arg2
    else:
        print('Делить на ноль нельзя')

print(my_division())

# 2.Реализовать функцию, принимающую несколько параметров, описывающих данные пользователя:
# имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.

def personal_data(name, surname, year, city, email, phone):
    print(name, surname, year, city, email, phone)


personal_data(name='Anna', surname='Kor', year='1992', city='Paris', email='anna@mai.ru', phone='34-67-54')


# 3.Реализовать функцию my_func(), которая принимает три позиционных аргумента,
# и возвращает сумму наибольших двух аргументов.

def my_func(arg1, arg2, arg3):
    """Возвращает сумму наибольших двух аргументов"""
    my_arg = [arg1, arg2, arg3]
    my_numbers = []
    for num in my_arg:
        number = max(my_arg)
        my_numbers.append(number)
        my_arg.remove(number)
    print(sum(my_numbers))


my_func(8, 134, 43)

# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y.
# Задание необходимо реализовать в виде функции my_func(x, y).
# При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# Подсказка: попробуйте решить задачу двумя способами.
# Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

# первый способ

def my_func(x, y):
    """Возведение числа x в степень y"""
    return x ** y


print(my_func(5, -2))

# второй способ

def my_func2(a, b):
    """Возведение числа a в степень b через цикл"""
    result = 1
    for i in range(abs(b)):
        result *= a       # result = result * a
    if b >= 0:
        return result
    else:
        return 1 / result


print(my_func2(float(5), -2))

# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел,
# разделенных пробелом и снова нажать Enter.
# Сумма вновь введенных чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел
# к полученной ранее сумме и после этого завершить программу.

result = 0
com = False
while com == False:
    numbers = input('Введите несколько чисел через пробел или специальный символ w для завершения: ')
    my_list = numbers.split()
    sum = 0
    for el in my_list:
        if el == 'w':
            com = True
            break
        else:
            result += float(el)
    result += sum
    print(f'Сумма {result}')
print(f'Ваша сумма {result}. Вычисления закончены.')

# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и
# возвращающую его же, но с прописной первой буквой.
# Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием.
# В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре.
# Сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Необходимо использовать написанную ранее функцию int_func().

def int_func(words):
    """Прописная первая буква слова"""
    return words.title()


my_word = input('Введите слово из маленьких латинских букв: ')
print(int_func(my_word))

my_str = input('Введите несколько слов из маленьких латинских букв через пробел: ')
print(int_func(my_str))
